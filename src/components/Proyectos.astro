---
import Github from "./icons/Github.astro"
import React from "./icons/React.astro"
import Vite from "./icons/Vite.astro"
import Css from "./icons/Css.astro"
//import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import { makeIssue } from "astro:schema"


const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: Github,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Github,
  },
  REACT: {
    name: "React",
    class: "bg-[#1F2937] text-white",
    icon: React,
  },
  VITE: {
    name: "Vite",
    class:   "bg-[#1C1C1C] text-white",
    icon: Vite
  },
  CSS: {
    name:"CSS",
    class: "bg-[#4B5563] text-white",
    icon: Css
  }
}
const PROJECTS = [
  
  {
    title: "Tablero Kanban",
    description:
      "Tablero Kanban desarrollado con Vite y React, utilizando la librería Drag & Drop (DnD Kit) para permitir una experiencia interactiva y fluida al mover tareas entre columnas. Este tablero es ideal para la gestión de proyectos, permitiendo a los usuarios organizar y visualizar el progreso de las tareas de manera eficiente.",
    link: "https://kanban-board-dndkit-gamma.vercel.app/",
    github: "https://github.com/JavierJN/TrelloBoard",
    image: "./public/projects/kanban-board-svgl.webp",
    tags: [TAGS.REACT, TAGS.VITE, TAGS.CSS],
  },
]
---

<div class="flex flex-col gap-y-16 ">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group lg:flex-row md:space-x-8 md:space-y-0 ">
  <div class="w-full ">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Imagen del proyecto" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full  md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full  md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <Github class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>